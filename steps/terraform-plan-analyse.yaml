parameters:
  - name: environment
    default: sandbox

  - name: stage
    default: ''

  - name: location
    default: 'UK South'
    values:
      - 'UK South'
      - 'UK West'

  - name: multiRegion
    default: false
    type: boolean

  - name: product
    default: ''

  - name: component
    default: ''

  - name: serviceConnection
    default: ''

  - name: terraformInitSubscription
    default: ''

  - name: kvConnectedServiceName
    default: 'azurerm-sandbox'

  - name: forcePreventParallelJobRun
    displayName: Always force prevent parallem run job
    type: boolean
    default: false


steps:
  - checkout: self
    clean: true
  - checkout: cnp-azuredevops-libraries
    clean: true
  - bash: echo ${{ parameters.environment }}
    displayName: Display environment parameter

  - template: ./set-build-repo-suffix-env-var.yaml
  - template: ./keyvault-read.yaml
    parameters:
      serviceConnection: DCD-CFT-Sandbox
      environment: ${{ parameters.environment }}

  - task: AzureKeyVault@2
    displayName: 'Get GitHub API token from Keyvault'
    condition: ne(variables['System.PullRequest.PullRequestNumber'], '')
    inputs:
      runAsPreJob: false
      ConnectedServiceName: DCD-CFT-Sandbox
      keyVaultName: 'infra-vault-nonprod'
      secretsFilter: 'github-api-token'

  - task: Bash@3
    displayName: Build resource values
    env:
      STAGE: ${{ parameters.stage }}
      MULTI_REGION: ${{ parameters.multiRegion }}
      ENVIRONMENT: ${{ parameters.environment }}
      COMPONENT: ${{ parameters.component }}
      LOCATION: ${{ parameters.location }}
    inputs:
      filePath: $(System.DefaultWorkingDirectory)/cnp-azuredevops-libraries/scripts/build-resource-values.sh
      workingDirectory: $(System.DefaultWorkingDirectory)/$(buildRepoSuffix)

  - task: AzureKeyVault@2
    inputs:
      azureSubscription: DCD-CFT-Sandbox
      KeyVaultName: ek-terraform-parser
      SecretsFilter: '*'

  - task: AzureCLI@2
    displayName: 'Download plans from blob'
    condition: ne(variables['System.PullRequest.PullRequestNumber'], '')
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        mkdir $(Build.ArtifactStagingDirectory)/tfplans/
        mkdir $(Build.ArtifactStagingDirectory)/tfhtml/
        az storage azcopy blob download -c plan-txt --account-name ekterraformparser -s "$(Build.Repository.Name)/$(System.PullRequest.PullRequestNumber)/*" -d $(Build.ArtifactStagingDirectory)/tfplans/ \
      azureSubscription: "DCD-CFT-Sandbox"

  - task: Bash@3
    displayName: Analyse terraform plan with AI
    condition: ne(variables['System.PullRequest.PullRequestNumber'], '')
    inputs:
      targetType: 'inline'
      script: |
        python3 $(System.DefaultWorkingDirectory)/cnp-azuredevops-libraries/scripts/tfplan-parser.py \
        --plansDir $(Build.ArtifactStagingDirectory)/tfplans/ \
        --outputDir $(Build.ArtifactStagingDirectory)/tfhtml/ \
        --endpoint $(open-ai-endpoint) \
        --deployment $(open-ai-deployment) \
        --apiKey $(open-ai-api-key)

  - task: AzureCLI@2
    displayName: 'Upload result to blob'
    condition: ne(variables['System.PullRequest.PullRequestNumber'], '')
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az storage azcopy blob upload -c plan-html --account-name ekterraformparser -s $(Build.ArtifactStagingDirectory)/tfhtml/plan.html -d "$(Build.Repository.Name)/$(System.PullRequest.PullRequestNumber)/plan.html"
      azureSubscription: "DCD-CFT-Sandbox"

  - task: Bash@v3
    displayName: Post link on PR description
    condition: ne(variables['System.PullRequest.PullRequestNumber'], '')
    env:
      GITHUB_TOKEN: $(github-api-token)
    inputs:
      targetType: 'inline'
      script: |
        body=$(gh api \
          --method GET \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/hmcts/$(Build.Repository.Name)/pulls/$(System.PullRequest.PullRequestNumber) -q '.body')

        gh api \
          --method PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/hmcts/$(Build.Repository.Name)/pulls/$(System.PullRequest.PullRequestNumber) \
          -f "body=${body}       

          Link to Terraform Plan: https://tfplan-viewer.hmcts.net/$(Build.Repository.Name)/$(System.PullRequest.PullRequestNumber)"